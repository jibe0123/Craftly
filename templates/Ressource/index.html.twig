{% extends "base.html.twig" %}

{% block title %}
    Ajouter une ressource
{% endblock %}

{% block body %}
    {% include 'Layout/Header.html.twig' %}

    <div class="modal">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Modal title</p>
                <button class="delete" aria-label="close"></button>
            </header>
            <section class="modal-card-body">
            </section>
            <footer class="modal-card-foot">
                <button class="button is-success applyProposal">Save changes</button>
                <button class="button">Cancel</button>
            </footer>
        </div>
    </div>
    <div class="page-ressource-layout">
        <div class="ressource_search has-text-centered">
            <p>Rechercher une <strong class="topline-ressource-search">ressource</strong></p>
            <div id="autocomplete" class="autocomplete">
                <input class="autocomplete-input" placeholder="Nom de la ressource"/>
                <ul class="autocomplete-result-list"></ul>
            </div>
            <br>
            <p>Ou proposer <a href="{{ path('add_ressource', {'selectCateg': 'Food'}) }}"><strong>une ressource</strong></a></p>
        </div>
        <div class="primer_categories">
            <div class="container">
                <p class="title is-5">Catégories les plus populaire</p>
                <ul>
                    <li>
                        <a href="#">Biens</a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="discover-ressource">
            <div class="columns is-variable is-5">
                <div class="column is-four-fifths">
                    <div class="discover-ressource-item">
                        <div class="columns">
                            <div class="column">
                                <h1 class="title">Dernières offre</h1>
                                <h2 class="subtitle">Subtitle</h2>
                                {% for o in offer %}
                                    <p>{{ o.user.name }}</p>
                                    <p>{{ o.ressource.name }}</p>
                                    <p>{{ o.ressource.category.title }}</p>
                                    <button class="button is-success"> J'ai besoin de cet  ressource</button>
                                {% endfor %}
                            </div>
                            <div class="column">
                                <h1 class="title">Dernière demandes</h1>
                                <h2 class="subtitle">Subtitle</h2>
                                {% for n in need %}
                                    <p>{{ n.user.name }}</p>
                                    <p>{{ n.ressource.name }}</p>
                                    <p>{{ n.ressource.category.title }}</p>
                                    <button class="button is-success" >J'offre cet ressource</button>
                                {% endfor %}
                            </div>
                        </div>
                    </div>
                </div>
                <div class="column">
                    <div class="discover-ressource-item">
                        <p class="is-size-5">Nouvelles ressource</p>
                        <ul>
                            {% for r in ressources %}
                                <li>
                                    <div class="ressource_list">
                                        <p>{{ r.name }}</p>
                                        <a href="" data-id="{{ r.id }}" data-user="{{ app.user.id }}" data-name="{{ r.name }}" data-type="1" class="addProposalBtn" >Offre</a>
                                        |
                                        <a href="" data-id="{{ r.id }}" data-user="{{ app.user.id }}" data-name="{{ r.name }}" data-type="0" class="addProposalBtn" >demande</a>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>

            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script src="https://unpkg.com/@trevoreyre/autocomplete-js"></script>

    <script>
        const searchRessource = input => {
            const url = 'http://localhost:8000/ressource/search/' + input;
            return new Promise(resolve => {
                if (input.length < 2) {
                    return resolve([])
                }
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        resolve(data)
                    })
            })
        }
        createAutocomplete = (selector, countSelector, debounceTime) => {
            new Autocomplete('#autocomplete', {
                search: input => {
                    return searchRessource(input)
                },
                debounceTime,
                getResultValue: result => result.name,
                onSubmit: result => {
                    console.log(result);
                }
            })
        }
        createAutocomplete('.debounced', '.count-debounced', 500)
    </script>
    <script>
        let tags = document.querySelectorAll('.tag-choose-category');
        console.log(tags);
        tags.forEach(item => {
            item.onclick = (e) => {
                e.target.classList.toggle("is-white");
            };
        })
    </script>
    <script>

        const tpl = (name, unit, id) => {
            return `<div class="field"> <label class="label">${name} ${ unit ? '('+unit+')' : '' }</label> <div class="control"> <input class="input proposalAttributeValue" data-id="${id}" type="text" placeholder=""> </div></div>`
        }
        let user_id;
        let ressource_id;
        let name;
        let type;

        let addProposals = document.querySelectorAll('.addProposalBtn')
        addProposals.forEach((item) => {
            item.addEventListener('click', (e) => {
                e.preventDefault();
                document.querySelector('.modal').classList.toggle('is-active');
                console.log(item);
                user_id = item.dataset.user;
                name = item.dataset.name;
                ressource_id = item.dataset.id;
                type = item.dataset.type;
                document.querySelector('.modal-card-title').innerHTML = name;
                fetch('/ressource/'+ ressource_id + '/attributes')
                    .then(response => response.json())
                    .then(data => {
                        console.log(data);
                        data.forEach(item => {
                            document.querySelector('.modal-card-body').innerHTML += tpl(item.name, item.unit, item.id);
                        })
                    });

            })
        })

        document.querySelector('.applyProposal').addEventListener('click', (e) => {
            let values = document.querySelectorAll('.proposalAttributeValue')
            let attrArray = [];
            values.forEach(item => {
                attrArray.push({
                    id: item.getAttribute('data-id'),
                    value: item.value
                });
            });


            (async () => {
                let url = `/proposal/${type === 1 ? 'offer' : 'need'}`

                console.log(url);
                const rawResponse = await fetch( url, {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        "ressource_id" : ressource_id,
                        "priority" : 1,
                        "user_id" : user_id,
                        "attributes" : attrArray
                    })
                });
                const content = await rawResponse.json();
                document.querySelector('.modal').classList.toggle('is-active');
                document.querySelector('.modal-card-body').innerHTML = ""

                console.log('return', content);
            })();


        })

        document.querySelector('button.delete').addEventListener('click', (e) => {
            document.querySelector('.modal').classList.toggle('is-active');
            document.querySelector('.modal-card-body').innerHTML = ""
        })
    </script>
{% endblock %}